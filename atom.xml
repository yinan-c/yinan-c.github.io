<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>1nan</title>
  <link ref="self" href=""/>
  <link ref="alternate" href="https://yinan.me/"/>
  <updated></updated>
  <author>
    <name>Yinan</name>
  </author>
  <id>ba15f2bcfa5336d8d2f005c8f0aa7951c3b52e50</id>

  
  <entry>
    <title>如何只用一个 Escape 键退出 Raycast - Get the Best of Both Worlds with Raycast and Alfred</title>
    <link ref="alternate" href="https://yinan.me/raycast-alfred.html" />
    <id>raycast-alfred</id>
    <published>2024-04-15 12:47:09+01:00</published>
    <updated>2024-04-15 12:47:09+01:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;这篇文章主要想分享两件事，一是如何让 Raycast 能像 Alfred 一样只用一个 Escape 键退出搜索窗口，而不是每次摁一次只能一级一级得退出，二是如何利用 Deeplink 来同时使用 Raycast 和 Alfred， 发挥各自的优势。&lt;/p&gt;
&lt;h2&gt;TLDR&lt;/h2&gt;
&lt;p&gt;利用这个 &lt;a href=&#34;https://yinan.me/pics/remap_escape_in_Raycast.kmmacros&#34;&gt;Keyboard Maestro macro&lt;/a&gt; 实现在 Raycast 搜索窗口中 remap a single escape to multiple escape keys。&lt;/p&gt;
&lt;h2&gt;如果你还想听我唠叨&lt;/h2&gt;
&lt;p&gt;我不想讨论孰优孰劣，哪个是 mac 上最好用的 Launcher (LaunchBar:?)，也并不希望任何一个产品被挤压到退市，并且市场上良性竞争促使产品进步是对消费者有益的。&lt;/p&gt;
&lt;p&gt;在我的电脑上两个都装了（感谢最早让我深度体验 launcher 的 Raycast），但是目前为止还是主要在使用 Alfred，仅仅是因为能够一键呼出和退出搜索窗口，强大的 Universal Actions，更快地文件搜索和 Navigation（每次1对1老板都惊艳于我找文件的速度:D），并且我也写了几个 &lt;a href=&#34;https://yinan.me/my-open-source.html&#34;&gt;Alfred Workflow&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;但是 Raycast 也有很多优点，就比如同一个功能，eject disks, 我更偏向于 Raycast 的 hud 通知，而不是 Alfred 的系统通知（因为经常开着勿扰模式），另外比如 Show Desktop 这个 Raycast 内置插件，我并没有在 Alfred 社区找到合适的方案。如果你想要主要使用 Raycast，但也有这个烦恼， 那么你可以通过 Keyboard Maestro 设置一键退出 Raycast，如果你想要同时使用两个 Launcher，那么你可以利用 Deeplink 来实现。我会分别在下面两节讨论。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/hud.png&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;设置一键退出 Raycast&lt;/h3&gt;
&lt;p&gt;Raycast 有多级菜单，每次按 Escape 键只能退出一级，这是他们产品的特有设计，但确实大大减慢了我使用 Launcher 的速度。要实现一键退出多级菜单，Raycast 内置 Command + Escape 来回到主菜单，但是不会退出窗口（搜索完，还想让你继续搜索？），你仍然需要再次按下 escape 键才能退出。&lt;/p&gt;
&lt;p&gt;之前用过 Keyboard Maestro 映射轻按 command + W 到 长按 command + W 来防止误关窗口，所以我想到了用 Keyboard Maestro 来实现映射一个 Escape 键到多个 Escape 键，关键问题在于如何识别 Raycast 的搜索窗口正在最前。好在已经有人在论坛上讨论过并且给出了&lt;a href=&#34;https://forum.keyboardmaestro.com/t/solved-check-whether-raycast-is-running/29073/5&#34;&gt;解决方案&lt;/a&gt;，我稍微修改了一下，实现了 remap，&lt;a href=&#34;https://yinan.me/pics/remap_escape_in_Raycast.kmmacros&#34;&gt;下载地址在这儿&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;Deeplink: raycast:// 和 alfred:// 实现互相呼出&lt;/h3&gt;
&lt;p&gt;Raycast 和 Alfred 都支持 Deeplink，Raycast 中选中 command 摁下 Command + K，就可以看到 Copy Deeplink 的选项，然后你可以创建一个 Alfred Workflow 在打开这些 Raycast DeepLink 实现直接调用 Raycast command （并且整个过程 Raycast 窗口不会出现）&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/raycastdeeplink.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/alfredworkflow.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;同样地，而如果你想要在 Raycast 或者 keyboard Maestro, Shortcuts 等其他地方调用 Alfred workflow，Alfred 提供了 External Actions 来实现通过 Deeplink 或者 AppleScript 调用 Alfred 的 workflow。在 Raycast 中设置 Quicklinks 打开这个 URL 即可以实现调用 Alfred Workflow。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/alfreddeeplink.gif&#34; /&gt;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>划词制作 Anki 卡片</title>
    <link ref="alternate" href="https://yinan.me/anki-vocabulary.html" />
    <id>anki-vocabulary</id>
    <published>2024-03-29 18:08:52+00:00</published>
    <updated>2024-03-29 18:20:23+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;最近在研究背单词（奈何来英国几年了，才发现单词才是短板，惭愧），一方面我在尝试不同的背单词软件，另一方面也在折腾划词生成 Anki 卡片，来建立自己的生词库。&lt;/p&gt;
&lt;p&gt;关于背单词软件，建议大家看少数派的这篇文章以及底下的评论，&lt;a href=&#34;https://sspai.com/post/87587&#34;&gt;5 个维度、6 个 App，帮你选出最适合自己的「背单词神器」&lt;/a&gt;。或者可以网上找一些 Anki 卡片组，推荐两个制作精良的卡片组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/1104981491&#34;&gt;4000 Essential English Words (all books) [en-en] - AnkiWeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/1498738333&#34;&gt;English Synonyms and Antonyms Workbooks - AnkiWeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文主要介绍如何用划词工具制作 Anki 卡片，模板教程主要是根据&lt;a href=&#34;https://www.laohuang.net/20171214/anki-definition-word-template/&#34;&gt;老黄老巢&lt;/a&gt;的教程基础上进行了一些修改。&lt;/p&gt;
&lt;h2&gt;达到的效果&lt;/h2&gt;
&lt;p&gt;最终在浏览器用 ODH 划词翻译之后选择恰当的意思，可以将当前句子（附带可点击的 URL）以及对应的英，中文意思（默认先显示英语释义，点击后显示中文释义）添加到 Anki 中，并且制成 Defination-Word 和 Word-Defination 两种卡片。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;word-def&#34; src=&#34;https://yinan.me/pics/word-defination.gif&#34; /&gt;
&lt;img alt=&#34;def-word&#34; src=&#34;https://yinan.me/pics/defination-word.gif&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;需要的软件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Anki and AnkiConnect 插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chromewebstore.google.com/detail/online-dictionary-helper/lppjdajkacanlmpbbcdkccjkdbpllajb?hl=en-GB&#34;&gt;Online Dictionary Helper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yinan.me/pics/Antimoon.apkg&#34;&gt;模板下载&lt;/a&gt;，在&lt;a href=&#34;https://arc.net/l/quote/oqpbgclk&#34;&gt;原4.0模板&lt;/a&gt; 的基础上略有修改&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置 ODH&lt;/h2&gt;
&lt;p&gt;在此，我仅仅分享一下合适我的配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我不需要全部的意思，只需要符合当前语境的意思，所以选择了 Consice 而不是 Glossary or Collins&lt;/li&gt;
&lt;li&gt;我需要中文在我点击的时候显示出来，所以我选择了 Collins EN-CN 字典&lt;/li&gt;
&lt;li&gt;URL： 在我想看原文上下文的时候点击 Sentence 部分即可跳转&lt;/li&gt;
&lt;li&gt;add-dw: 这一项不为0代表同时添加 Definition-Word 卡片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;odh&#34; src=&#34;https://yinan.me/pics/odh.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;具体每个配置的详细意思可以参考这篇博客，&lt;a href=&#34;https://arc.net/l/quote/oqpbgclk&#34;&gt;Antimoon 划词助手兼容模板 3.0 - 老黄老巢&lt;/a&gt; 或者项目的 &lt;a href=&#34;https://github.com/ninja33/ODH&#34;&gt;GitHub 主页&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;修改卡片显示项目(可选)&lt;/h2&gt;
&lt;p&gt;上面提到我在老黄老巢的模板上进行了一些修改（比如把 glossary 改成 consice 只显示一种释义，比如增加 URL 和默认隐藏中文释义），主要是为了适应我的需求，你也可以根据你的使用习惯在 Card-type 中进行修改卡片模板。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/card-type.png&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ninja33/ODH&#34;&gt;https://github.com/ninja33/ODH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1zW411a7Dz/?p=1&#34;&gt;背单词软件Anki之Antimoon特色模板教程(definition-word卡片自动生成)_哔哩哔哩_bilibili&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arc.net/l/quote/oqpbgclk&#34;&gt;Antimoon 划词助手兼容模板 3.0 - 老黄老巢&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.laohuang.net/20171214/anki-definition-word-template/&#34;&gt;请找一个解释要配的上我这个单词 — 老黄老巢&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.antimoon.com/how/srs.htm&#34;&gt;Antimoon - How to Learn English effectively&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/87587&#34;&gt;5 个维度、6 个 App，帮你选出最适合自己的「背单词神器」&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
    <title>About</title>
    <link ref="alternate" href="https://yinan.me/about.html" />
    <id>about</id>
    <published>2023-06-19 17:35:38+01:00</published>
    <updated>2024-03-26 16:47:27+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yinan.me/hello-world&#34;&gt;中文简介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hi, I am Yinan, a PhD student in Physics.&lt;/p&gt;
&lt;p&gt;Since I started my PhD, I have been reading and learning a lot, by writing down tons of notes and worklogs. Most of my notes are Markdown files stored in an app called &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since almost all of my notes are going digital now, it is not a bad idea to put them online. Also, I have been writing short articles in Chinese since very young, but hadn&#39;t had the chance to collect and share them with others. I have been thinking about starting a blog for a long time. &lt;/p&gt;
&lt;p&gt;Now, I finally decided to start one, thanks to a great tool &lt;a href=&#34;https://github.com/ahui2016/pyboke&#34;&gt;PyBoke&lt;/a&gt;, which makes it very easy to create a blog using Markdown files. I know other tools like WordPress and Hugo that can do the same thing, but I like the simplicity of PyBoke. &lt;/p&gt;
&lt;h2&gt;About this blog&lt;/h2&gt;
&lt;p&gt;This blog is created by a modified version of &lt;a href=&#34;https://github.com/yinan-c/pyboke&#34;&gt;PyBoke&lt;/a&gt;, where I added features like full text RSS, navigation buttons, and abstracts on the homepage.&lt;/p&gt;
&lt;p&gt;The original version of PyBoke is created by &lt;a href=&#34;https://github.com/ahui2016&#34;&gt;ahui2016&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This blog is fully open source. All the articles in Markdown format, together with the templates I use on this website can also be found in the &lt;a href=&#34;https://github.com/yinan-c/blog&#34;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I use the theme &lt;a href=&#34;https://newcss.net/&#34;&gt;newcss&lt;/a&gt;, and publish the blog on &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What will I write here?&lt;/h2&gt;
&lt;p&gt;I am interested in many things, including but not limited to: RSS, macOS softwares, Python ... As I browse the internet (mostly via RSS), interesting things will pop up and I am happy to share online here.&lt;/p&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Twitter logo icons created by &lt;a href=&#34;https://www.flaticon.com/free-icon/twitter_3670151&#34;&gt;Md Tanvirul Haque - Flaticon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Email icon from &lt;a href=&#34;https://www.freepnglogos.com/images/email-13765.html&#34;&gt;freepnglogos.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Matodon logo by Eugen Rochko &amp;amp; other Mastodon contributors - https://blog.joinmastodon.org/, AGPL, https://commons.wikimedia.org/w/index.php?curid=120470930&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;License&lt;/h1&gt;
&lt;p&gt;The articles I write are licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC BY 4.0&lt;/a&gt;. You are free to: 
- &lt;strong&gt;Share&lt;/strong&gt; — copy and redistribute the material in any medium or format
- &lt;strong&gt;Adapt&lt;/strong&gt; — remix, transform, and build upon the material
for any purpose, even commercially.&lt;/p&gt;
&lt;p&gt;The licensor cannot revoke these freedoms as long as you follow the license terms.&lt;/p&gt;
&lt;p&gt;Under the following terms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Attribution&lt;/strong&gt; — You must give appropriate credit , provide a link to the license, and indicate if changes were made . You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No additional restrictions&lt;/strong&gt; — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
    <title>Friends</title>
    <link ref="alternate" href="https://yinan.me/Friends.html" />
    <id>Friends</id>
    <published>2024-03-26 16:30:50+00:00</published>
    <updated>2024-03-26 16:30:50+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;暂时空空如也。&lt;/p&gt;
&lt;p&gt;最近开始考虑增加友链，先准备从我订阅的 RSS 中发送一些申请。&lt;/p&gt;
&lt;p&gt;如果你有兴趣，也欢迎发&lt;a href=&#34;mailto:yinan.email@gmail.com&#34;&gt;邮件&lt;/a&gt;。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Avatars</title>
    <link ref="alternate" href="https://yinan.me/Avatars.html" />
    <id>Avatars</id>
    <published>2024-03-26 15:00:27+00:00</published>
    <updated>2024-03-26 15:10:55+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;我的 GitHub 和博客头像是这个，朋友都说跟我有点神似 :)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;avatar&#34; src=&#34;https://yinan.me/pics/old_avatar.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这其实是&lt;a href=&#34;https://notion-avatar.vercel.app/&#34;&gt;这个网站&lt;/a&gt;生成的 Notion 风格头像。&lt;/p&gt;
&lt;p&gt;另外分享一个在刷推发现的 &lt;a href=&#34;https://txstc55.github.io/ugly-avatar/&#34;&gt;Ugly Avatar&lt;/a&gt;，我生成了这个用它作为我的 v2ex 账号头像。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ugly-avatar&#34; src=&#34;https://yinan.me/pics/avatar.png&#34; /&gt;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Organizing /Applications folder in macOS</title>
    <link ref="alternate" href="https://yinan.me/categorize-applications.html" />
    <id>categorize-applications</id>
    <published>2024-03-15 15:48:39+00:00</published>
    <updated>2024-03-17 21:59:01+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;I struggle sometimes with hundreds of apps installed in my Applications folder.&lt;/p&gt;
&lt;p&gt;For frequently-used apps, Alfred is my best friend.
For most of the time, I can open the app I want within a few keystrokes.&lt;/p&gt;
&lt;p&gt;But for other apps I use occationaly, it is hard to remember the name every time, so I can only skim through the Applications folder to find the app I need. But it&#39;s hard to get the functionality of each app just by looking through the icons and names, it is like find a needle in a haystack. &lt;/p&gt;
&lt;p&gt;Although you can always group or sort the apps to help you find what you need, like the tip shown &lt;a href=&#34;https://eshop.macsales.com/blog/40569-quick-tip-arrange-your-mac-apps-by-category-in-finder/&#34;&gt;here&lt;/a&gt; to group them by default category, I still feel it&#39;s not enough for massive apps since the default categories are too broad.&lt;/p&gt;
&lt;p&gt;So I decided to categorize them further myself, similar idea to how iOS does it in the App Library.&lt;/p&gt;
&lt;p&gt;I came across this blog post by &lt;a href=&#34;http://blog.hyperjeff.net/?p=44&#34;&gt;Jeff&lt;/a&gt; where he shared his way of categorizing the /Applications folder. As far as I appreciate the idea behind the post, there is some problems if you do exactly as he did as the time of writing.&lt;/p&gt;
&lt;p&gt;The reason is Apple would not allow you move around stock apps(see picture below). &lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/Error_move_settings.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Even some third-party apps might not work properly if you move them. For example, applescript like the following would break if you move iTerm away from /Applications folder (This is the applescript that you can change default terminal to iTerm in Alfred&#39;s preferences):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;on alfred_script(q)
    tell application &#34;iTerm&#34;
        activate
        tell current window
            create tab with default profile
            tell current session
                write text q
            end tell
        end tell
    end tell
end alfred_script&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Moreover, package installers(.pkg, not .dmg) would by default put the app to /Applications folder, and there might be problem if move them according to a comment in this &lt;a href=&#34;https://superuser.com/questions/76094/organizing-the-mac-os-x-applications-directory&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All this tells us it is better to leave as it is in the /Applications folder. So a good way to deal with this is to create a new folder and put the aliases of all the apps in the new folder. I use &#39;~/Applications&#39;, and create alias are as simple as just dragging the apps to the new folder. An easy way to start - You can borrow the categories from the default categories groups using the tips &lt;a href=&#34;https://eshop.macsales.com/blog/40569-quick-tip-arrange-your-mac-apps-by-category-in-finder/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/finder_info.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;⌘ + J in the /Applications folder, group the apps by the default categories, and then move the apps in each group to different subfolders in the new folder. The groups might be too broad. Then you can start from there to modify the categories to your own preference.&lt;/p&gt;
&lt;p&gt;Okay, now app alias are in different subfolders, we have the confidence to find the non-frequently-used apps more easily. But what if there is a new app installed? What if we want to remove an app? To keep the system running, an important thing is to keep the alias in the ~/Applications folder up-to-date.&lt;/p&gt;
&lt;p&gt;For this, you can use Hazel or some automation tools (Automator, Keyboard Maestro, or other folder watcher) to script the process of creating alias and moving them to ~/Applications. Here is an example of how to do it with Hazel for the new app installed: &lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/Hazel_rule.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now everytime there is a new app installed, Hazel will create an alias in the ~/Applications folder. Just like put it in app inbox, I can review the app and decide which category it belongs to or just toss it to keep the total number reasonable. Unfortunately, with Hazel, I don&#39;t find a good way to automatically remove the correspdonding alias when the app is removed. But I have made a &lt;a href=&#34;https://yinan.me/pics/Update-alias-when-trashing-apps.kmmacros&#34;&gt;keyboard maestro macro&lt;/a&gt; to do this, inspired by this &lt;a href=&#34;https://forum.keyboardmaestro.com/t/solved-find-specific-files-inside-folders-and-sub-folders-and-then-copy-them/33042&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/km_macro.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I did this because it bothers me sometimes, when I want to find a specific app but I forgot the name, and finding it without hierarchy is difficult. At the end of the day, you can always delete the apps you don&#39;t use to limit the number of apps. Then the flat structure of the /Applications folder is not a problem anymore.&lt;/p&gt;
&lt;p&gt;If there aren&#39;t many apps at the first place or even there are that it does not bother you, there is no need to do this. Just as the saying goes, if it ain&#39;t broke, don&#39;t fix it.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>推荐一些 macOS 应用</title>
    <link ref="alternate" href="https://yinan.me/mac-apps.html" />
    <id>mac-apps</id>
    <published>2024-03-15 10:56:04+00:00</published>
    <updated>2024-03-15 11:07:19+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;想写这个很久了，列表保持更新，括号内是我之前使用过的同类替代品。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://alfredapp.com/&#34;&gt;Alfred&lt;/a&gt;（目前我最喜欢的应用，Raycast 也是一个非常好的免费替代品）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.keyboardmaestro.com/&#34;&gt;Keyboard Maestro&lt;/a&gt;（一个非常强大的自动化 App）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.corecode.io/macupdater/&#34;&gt;MacUpdater&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/velja/id1607635845?mt=12&#34;&gt;Velja&lt;/a&gt;（浏览器选择器，付费的有 &lt;a href=&#34;https://apps.apple.com/us/app/openin-4-advanced-link-handler/id1643649331?mt=12&amp;amp;uo=4&amp;amp;at=10l4tL&amp;amp;ct=searchlink&#34;&gt;Openin&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.popclip.app/&#34;&gt;Popclip&lt;/a&gt;（对选中文本操作，有各种 extension，每天用它打开 URL, Google, &lt;a href=&#34;https://brettterpstra.com/projects/searchlink/&#34;&gt;searchlink&lt;/a&gt;, 添加到 Omnifocus 等）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://brettterpstra.com/projects/searchlink/&#34;&gt;SearchLink&lt;/a&gt; (不能严格算是一个 App，添加 markdown 中的 url 时很有用，我是和 Popclip 一起使用)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://netnewswire.com/&#34;&gt;NetNewsWire&lt;/a&gt; (尝试过 Reeder，但我更喜欢 NNW)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devontechnologies.com/apps/devonthink&#34;&gt;DEVONthink&lt;/a&gt;, &lt;a href=&#34;https://www.zotero.org/&#34;&gt;Zotero&lt;/a&gt;（文档和文献应用，Anybox 是一个不错的替代品）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://streaksapp.com/&#34;&gt;Streaks app&lt;/a&gt;（习惯养成，保持我的日常运转）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Ji4n1ng/OpenInTerminal&#34;&gt;OpenInTerminal-Lite&lt;/a&gt; 和 OpenInEditor-Lite（位于 Finder工具栏上的应用，可在终端中打开特定目录）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://magicquit.com/&#34;&gt;MagicQuit&lt;/a&gt;、&lt;a href=&#34;https://swiftquit.com/&#34;&gt;SwiftQuit&lt;/a&gt;、&lt;a href=&#34;https://amicoapps.com/app/quitall/&#34;&gt;QuitAll&lt;/a&gt;、&lt;a href=&#34;https://marco.org/apps&#34;&gt;Quitter&lt;/a&gt;（自动关闭应用）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://Wins.cool&#34;&gt;Wins.cool&lt;/a&gt;, Lasso, emmetapp, Moom（窗口管理，替代品可以是 Rectangle）&lt;/li&gt;
&lt;li&gt;MonitorControl（单独控制不同显示器的亮度）&lt;/li&gt;
&lt;li&gt;Karabiner Elements（对我来说是必不可少的 key-binding 应用，比如 shift 切换中英文，CAPS LOCK remap）&lt;/li&gt;
&lt;li&gt;Input Source Pro, SwitchKey, ShowyEdge（根据应用自动切换输入法，在屏幕边缘显示当前输入法）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.homerow.app/&#34;&gt;Homerow&lt;/a&gt; 和 &lt;a href=&#34;https://wooshy.app/&#34;&gt;Wooshy&lt;/a&gt;（用键盘代替鼠标操作）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bahoom.com/hyperswitch&#34;&gt;HyperSwitch&lt;/a&gt; 和 &lt;a href=&#34;https://bahoom.com/hyperdock&#34;&gt;HyperDock&lt;/a&gt;（最近更新支持 Sonoma，App/Window Switcher，还有 Hotkeys, Alt-Tab 和 Manico, Raycast 也能给不同应用设置快捷键）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/code-piper/id1669959741?mt=12&amp;amp;uo=4&amp;amp;at=10l4tL&amp;amp;ct=searchlink&#34;&gt;CodePiper&lt;/a&gt;（自动从短信中复制2FA）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xiaogdgenuine/Doll&#34;&gt;Doll: A mac app to help monitor your app badges!&lt;/a&gt; (在菜单栏监控 Slack 和微信消息)&lt;/li&gt;
&lt;li&gt;Dropover, dropzone, yoink（drag and drop stash）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://backupstatus.app/&#34;&gt;Backup Status app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://commandqapp.com/&#34;&gt;CommandQ&lt;/a&gt; 和 SlowerQuitApps（防止意外使用CommandQ，KM也可以写脚本做到这一点）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.irradiatedsoftware.com/labs/&#34;&gt;FinderMinder&lt;/a&gt;（固定 Finder 窗口大小）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hmarr/vitals&#34;&gt;Vitals&lt;/a&gt;, iStats Menus（菜单栏上显示不同 app CPU 使用率）&lt;/li&gt;
&lt;li&gt;MediaMate（高颜值，显示当前播放歌曲）&lt;/li&gt;
&lt;li&gt;Hazel（文件自动化）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/gb/app/rapidmg/id6451349778?mt=12&#34;&gt;Rapidmg&lt;/a&gt; （一键安装dmg，无需拖动弹出等操作）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://espanso.org/&#34;&gt;Espanso&lt;/a&gt;（开源 Text expander）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stuntsoftware.com/reflex/&#34;&gt;Reflex&lt;/a&gt;（媒体键定向到 Spotify 和 Apple Music）&lt;/li&gt;
&lt;li&gt;Onyx, HiDock（清理 mac，隐藏 Dock）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/gb/app/subscriptions-track-expenses/id1577082754&#34;&gt;Subscriptions&lt;/a&gt;（订阅管理，可以和 App Store 联动）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ts1/BLEUnlock&#34;&gt;BLEUnlock&lt;/a&gt;（通过 iPhone、Apple Watch 来锁定和解锁 Mac。）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.irradiatedsoftware.com/labs/#shortcutdetective&#34;&gt;ShortcutDetective&lt;/a&gt;（停更了，但仍然能用）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/gb/app/sofa-downtime-organizer/id1276554886&#34;&gt;Sofa&lt;/a&gt;, &lt;a href=&#34;https://apps.apple.com/gb/app/film-noir-for-trakt-just-watch/id1528417240&#34;&gt;FilmNoir&lt;/a&gt;, &lt;a href=&#34;https://apps.apple.com/gb/app/gametrack/id1136800740&#34;&gt;GameTrack&lt;/a&gt;（书影音记录）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.apptorium.com/screenfocus&#34;&gt;ScreenFocus App&lt;/a&gt; 和 &lt;a href=&#34;https://hazeover.com/&#34;&gt;Hazeover&lt;/a&gt;（使非聚焦的应用和显示器变暗）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cleanclip.cc/&#34;&gt;CleanClip&lt;/a&gt;, &lt;a href=&#34;https://apps.apple.com/gb/app/pastenow-instant-clipboard/id1552536109&#34;&gt;PasteNow&lt;/a&gt;（剪贴板管理器，我也经常使用 Alfred）&lt;/li&gt;
&lt;li&gt;DaisyDisk（分析磁盘空间）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mowglii.com/itsycal/&#34;&gt;Itsycal&lt;/a&gt;（小巧的菜单栏日历应用）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getlater.app/&#34;&gt;Later&lt;/a&gt;（暂时保存当前应用和会话）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://goodsnooze.gumroad.com/l/macwhisper&#34;&gt;MacWhisper&lt;/a&gt;（最佳音频转文字应用）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marta.sh/&#34;&gt;Marta&lt;/a&gt;（双面板 Finder 替代品，另有 QSpace 和 Forklift）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://omnivore.app/&#34;&gt;Omnivore&lt;/a&gt;（开源的稍后阅读）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/stempel-create-new-files/id1638437641?mt=12&amp;amp;uo=4&amp;amp;at=10l4tL&amp;amp;ct=searchlink&#34;&gt;Stempel&lt;/a&gt;（在右键菜单中以不同格式/预设来创建新文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下是可以在 SetApp 中找到的应用，有些是订阅，大多数是一次性付费应用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Airbuddy（iOS Airpods 体验）&lt;/li&gt;
&lt;li&gt;Timing App&lt;/li&gt;
&lt;li&gt;Bartender&lt;/li&gt;
&lt;li&gt;BusyCal&lt;/li&gt;
&lt;li&gt;Canary Mail&lt;/li&gt;
&lt;li&gt;Cleanshot X（替代品 Shottr）&lt;/li&gt;
&lt;li&gt;Focus and Session（专注）&lt;/li&gt;
&lt;li&gt;Time Out（为了眼睛健康）&lt;/li&gt;
&lt;li&gt;HookMark（链接一切）&lt;/li&gt;
&lt;li&gt;HoudahSpot（全盘全文搜索，我更多用 Alfred、Devonthink 和 Foxtrot）&lt;/li&gt;
&lt;li&gt;Mission Control Plus&lt;/li&gt;
&lt;li&gt;Numi，Soulver（计算器）&lt;/li&gt;
&lt;li&gt;OneSwitch（我经常用来清洁电脑，替代品：OnlySwitch, KeyboardCleanTool）&lt;/li&gt;
&lt;li&gt;SnippetsLab&lt;/li&gt;
&lt;li&gt;Swish（触控板窗口管理）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎在评论中分享你的推荐。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link ref="alternate" href="https://yinan.me/hello-world.html" />
    <id>hello-world</id>
    <published>2023-06-18 18:59:53+01:00</published>
    <updated>2024-02-01 22:51:50+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;h2&gt;我是谁?&lt;/h2&gt;
&lt;p&gt;我叫Yinan，目前在英国读博，物理专业。本科在中科大，也是学的物理。&lt;/p&gt;
&lt;h2&gt;为什么写博客？&lt;/h2&gt;
&lt;p&gt;回想过去的25年，虽然有记录，写笔记的爱好，但是我还没有正经得把自己的所见所思整理，更没有发布。开始读博以后，有意识的把工作记录和日常见闻记录成文档，碎碎念积少成多，也就成为我在这个世界上来过的一点点证明。&lt;/p&gt;
&lt;p&gt;博客作为一个自己的 digital 小岛，我认为非常适合将这些见闻想法汇集。平时阅读很多文章，浏览很多新闻信息，但是大多很快就忘了，它们只是作为信息从我脑中漂过，而不是作为知识想法被我内化。组织语言记录是对这些繁杂信息的整理消化，“再创作”，也是一次自我反思。从这个意义上看，写博客或许可以帮助我学习知识，内化想法，同时可以提升表达想法的能力。&lt;/p&gt;
&lt;p&gt;我个人非常欣赏 Blog 这种“链接孤岛“的想法，同时也非常认同 open web 的愿景，觉得有价值的信息是应该被分享的，至少值得被记录下来。但是我不喜欢中心化的平台，更不用说 under sensorship 的那些，不喜欢被算法推荐的信息来源，我喜欢把数据自托管，所谓的 self-hosted。&lt;/p&gt;
&lt;p&gt;另外还有一个原因，阅读确实会让人有表达的冲动。我从小就不擅长写文章，但我在初中时仍是写了几篇中短篇小说，高中时候也会在月考作文里写写短篇，偶尔还能拿高分，就是因为当时看了很多各式各样的小说，当时的我很有表达，模仿的欲望。而现在写文章能力已经大大退步了，所以写博客权当给自己练练手，希望我能坚持。&lt;/p&gt;
&lt;h2&gt;我会写些什么&lt;/h2&gt;
&lt;p&gt;我平时喜欢折腾软件，写写脚本（因为平时科研工作有太多重复作业了），喜欢打游戏，每天刷刷 RSS，听听播客，听音乐看剧。在日常冲浪中，任何我觉得有意思，有分享意义的东西，都可能会发布在这里。又也许会把之前的一些想法笔记整理出来，发在这里。&lt;/p&gt;
&lt;h2&gt;博客用了什么&lt;/h2&gt;
&lt;p&gt;本博客的文章用 Markdown 编写。
采用了开源方案 &lt;a href=&#34;https://github.com/ahui2016/pyboke&#34;&gt;PyBoke&lt;/a&gt; 生成静态网站，自己在此基础上加了点&lt;a href=&#34;https://github.com/yinan-c/pyboke/&#34;&gt;其他功能&lt;/a&gt;，例如首页显示摘要，文章底部翻页，full text RSS 格式。使用的是 &lt;a href=&#34;https://newcss.net/&#34;&gt;newcss 主题&lt;/a&gt;，再通过 &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; 发布。&lt;/p&gt;
&lt;p&gt;本博客所有源 markdown 文件，以及模板开源，托管在 &lt;a href=&#34;https://github.com/yinan-c/blog&#34;&gt;GitHub&lt;/a&gt; 上。&lt;/p&gt;
&lt;h2&gt;版权&lt;/h2&gt;
&lt;p&gt;本博客所有文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC BY 4.0&lt;/a&gt; 协议。您可以自由地：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;共享&lt;/strong&gt; - 在任何媒介以任何形式复制、发行本作品 在任何用途下，甚至商业目的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;演绎&lt;/strong&gt; - 修改、转换或以本作品为基础进行创作 在任何用途下，甚至商业目的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只要你遵守许可协议条款，许可人就无法收回你的这些权利。&lt;/p&gt;
&lt;p&gt;惟须遵守下列条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;署名&lt;/strong&gt; - 您必须给出 适当的署名 ，提供指向本许可协议的链接，同时 标明是否（对原始作品）作了修改 。您可以用任何合理的方式来署名，但是不得以任何方式暗示许可人为您或您的使用背书。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;没有附加限制&lt;/strong&gt; - 您不得适用法律术语或者 技术措施 从而限制其他人做许可协议允许的事情。&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
    <title>How to let your shell to remember your commands</title>
    <link ref="alternate" href="https://yinan.me/shell-auto-suggestions.html" />
    <id>shell-auto-suggestions</id>
    <published>2024-02-01 17:09:21+00:00</published>
    <updated>2024-02-01 22:26:17+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;Whenever you got a new machine, there&#39;s always endless configurations porting, codes compilations and packages installations. It is crutial step to make the new machine meets your habits.&lt;/p&gt;
&lt;p&gt;Recently, I got access to a new supercomputer for a limited amount of time, I started using it without much configuration. Soon I found myself missing the convenience of auto-suggestion for commands, which I got used to in prevously machines I&#39;ve wored on.&lt;/p&gt;
&lt;p&gt;Auto-suggestion in your shell is basically a plugin/extension that remembers your commands history and provide suggestions when you type in the first few letters of a command. When you find yourself frequently using the same commands (such as &lt;code&gt;ssh&lt;/code&gt; to a specific server), it could be really useful.&lt;/p&gt;
&lt;p&gt;This is how the suggestions will look like (I&#39;m using zsh-autosuggestions here):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/zsh.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So this article is mainly to give recommendations for both zsh and bash users on how to configure the shell to remember your commands.&lt;/p&gt;
&lt;h2&gt;1. zsh-autosuggestions for zsh&lt;/h2&gt;
&lt;p&gt;On my mac, zsh is the default shell, the plugin &lt;code&gt;zsh-autosuggestions&lt;/code&gt; is what I want to recommend here. It suggests commands when you type in a zsh shell, and you can simply press the right arrow key to accept the suggestion.&lt;/p&gt;
&lt;p&gt;To install it, you can follow the instructions on their &lt;a href=&#34;https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md&#34;&gt;github repo&lt;/a&gt;. You can use Antigen, Oh My Zsh, Homebrew or manually install it.&lt;/p&gt;
&lt;p&gt;I use oh-my-zsh for managing my zsh configurations. Actually I&#39;m using a rather minimal configuration of oh-my-zsh, which consists only 2 plugins. These are the lines to configure oh-my-zsh in my &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
export ZSH=&#34;$HOME/.oh-my-zsh&#34;
ZSH_THEME=&#34;alanpeabody&#34;
plugins=(git zsh-syntax-highlighting zsh-autosuggestions)
source $ZSH/oh-my-zsh.sh&lt;/code&gt;
As you can see, to install &lt;code&gt;zsh-autosuggestions&lt;/code&gt; you just need to add it to the &lt;code&gt;plugins&lt;/code&gt; list, separated by a space, tab, or newline.&lt;/p&gt;
&lt;p&gt;There are definitely more to explore in oh-my-zsh, but I&#39;m not going to talk about them in detail here. If you&#39;re interested in more configurations, you can always check out the &lt;a href=&#34;https://ohmyz.sh/&#34;&gt;official website&lt;/a&gt; or their &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh&#34;&gt;github repo&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(PS. I also recommend &lt;a href=&#34;https://github.com/sindresorhus/pure&#34;&gt;pure&lt;/a&gt; as a beautiful and minimal ZSH prompt theme, and it is developed and maintained by my favorite open source and mac apps developer Sindre Sorhus.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2. ble.sh for bash&lt;/h2&gt;
&lt;p&gt;For some linux machines, bash is default shell. If you are using bash, I would recommend &lt;a href=&#34;https://github.com/akinomyoga/ble.sh&#34;&gt;ble.sh&lt;/a&gt;, which stands for Bash Line Editor.&lt;/p&gt;
&lt;p&gt;I was looking for a way to let my bash shell to remember my commands, and I found there is a &lt;a href=&#34;https://github.com/ohmybash/oh-my-bash&#34;&gt;oh-my-bash&lt;/a&gt; repo, which is the counterpart of oh-my-zsh, for managing your bash configuration. However, I couldn&#39;t find a easy-to-use auto-suggestion plugin that can be installed via oh-my-bash.&lt;/p&gt;
&lt;p&gt;Then I found &lt;a href=&#34;https://github.com/akinomyoga/ble.sh&#34;&gt;ble.sh&lt;/a&gt;, and you can even try it first without installation.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git
make -C ble.sh
source ble.sh/out/ble.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then try typing in a few commands, you&#39;ll find it achieves the same functionality as &lt;code&gt;zsh-autosuggestions&lt;/code&gt;, it even gives suggestions on commands that you never used before.&lt;/p&gt;
&lt;p&gt;If you like it, you can quickly install it via running the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git
make -C ble.sh install PREFIX=~/.local
echo &#39;source ~/.local/share/blesh/ble.sh&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I hope some of you will find this article useful, and I&#39;m also looking forward to hearing your recommendations on other useful plugins or your shell configurations.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>如何让 Shell 记住常用命令</title>
    <link ref="alternate" href="https://yinan.me/shell-auto-suggestions-zh.html" />
    <id>shell-auto-suggestions-zh</id>
    <published>2024-02-01 18:04:18+00:00</published>
    <updated>2024-02-01 22:26:17+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;每当配置一台新服务器时，迁移配置、编译代码和安装包，都是最一开始要做的事情。
最近，我们组有了一台新的超算，但给的时间有限，于是我几乎没有配置，登录上编译完软件包就开始用了。然而，在我一而再再而三重复输入类似的命令后，我发现自己已然适应，甚至完全离不开命令自动补全带给我的便利了。&lt;/p&gt;
&lt;p&gt;Shell 自动建议是在你输入一条命令的前几个字母时，从命令行历史中给出补全建议。如果你需要经常输入相同或类似的命令时（例如，ssh到特定的服务器），那么这个功能会非常有用，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/zsh.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因此，本文主要是给 zsh 和 bash 用户推荐 Shell 记住常用历史命令的插件，以及如何安装和配置它们。&lt;/p&gt;
&lt;h2&gt;1. ZSH 用户：zsh-autosuggestions&lt;/h2&gt;
&lt;p&gt;在 Mac 上，zsh 是默认的 shell，我推荐使用 &lt;code&gt;zsh-autosuggestions&lt;/code&gt; 插件。如其名，它会在你输入 zsh 命令时自动给出建议，然后按右箭头键接受建议。&lt;/p&gt;
&lt;p&gt;可以按照其 &lt;a href=&#34;(https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md)&#34;&gt;github repo&lt;/a&gt; 上的说明进行安装，安装方式有 Antigen、Oh My Zsh、Homebrew 或手动安装。&lt;/p&gt;
&lt;p&gt;我使用的是 oh-my-zsh 来管理 zsh 配置，这是我在 &lt;code&gt;~/.zshrc&lt;/code&gt; 中有关 oh-my-zsh 的代码，我目前使用得很简单，只有两个插件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export ZSH=&#34;$HOME/.oh-my-zsh&#34;
ZSH_THEME=&#34;alanpeabody&#34;
plugins=(git zsh-syntax-highlighting zsh-autosuggestions)
source $ZSH/oh-my-zsh.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以看到安装方式十分简单，只需把 &lt;code&gt;zsh-autosuggestions&lt;/code&gt; 加入到 &lt;code&gt;plugins&lt;/code&gt; 列表中，用空格、制表符或换行符分隔不同的插件即可。&lt;/p&gt;
&lt;p&gt;当然，oh-my-zsh 还有很多其他可玩的地方，不管是主题还是插件，这里就不详细介绍了。如果你对更多配置感兴趣，可以查看 &lt;a href=&#34;https://ohmyz.sh/&#34;&gt;官方网站&lt;/a&gt; 或他们的 &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh&#34;&gt;github repo&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（PS. 另外我还推荐 &lt;a href=&#34;https://github.com/sindresorhus/pure&#34;&gt;pure&lt;/a&gt; 作为一个漂亮而简洁的 ZSH 提示符主题，它也是我最崇拜的开源和 Mac 应用程序开发者 Sindre Sorhus 开发维护的。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2. BASH 用户：ble.sh&lt;/h2&gt;
&lt;p&gt;对于一些 Linux 机器，bash 是默认的 shell。如果你使用 bash，我推荐 &lt;a href=&#34;https://github.com/akinomyoga/ble.sh&#34;&gt;ble.sh&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我在寻找让 bash 记住常用命令的方法时，发现了 &lt;a href=&#34;https://github.com/ohmybash/oh-my-bash&#34;&gt;oh-my-bash&lt;/a&gt;，和 oh my zsh 对应，它可以用来管理 bash 配置，但我没有找到一个可以通过它轻松安装的 auto suggestions 插件。&lt;/p&gt;
&lt;p&gt;然后我发现了 ble.sh，它甚至提供了试用命令，你可以不用安装的情况下暂时使用它，只需运行以下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git
make -C ble.sh
source ble.sh/out/ble.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当你尝试输入一些命令，你会发现它和 &lt;code&gt;zsh-autosuggestions&lt;/code&gt; 的基本功能是一样的，甚至会给出你从未使用过的命令的建议。&lt;/p&gt;
&lt;p&gt;如果你喜欢它，当然也可以通过运行以下命令快速安装：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git
make -C ble.sh install PREFIX=~/.local
echo &#39;source ~/.local/share/blesh/ble.sh&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;希望本文对你有用，也期待听到你对其他插件或 shell 配置的建议。&lt;/p&gt;</content>
  </entry>
  

</feed>