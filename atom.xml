<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>1nan</title>
  <link ref="self" href=""/>
  <link ref="alternate" href="https://yinan.me/"/>
  <updated></updated>
  <author>
    <name>Yinan</name>
  </author>
  <id>ba15f2bcfa5336d8d2f005c8f0aa7951c3b52e50</id>

  
  <entry>
    <title>记录足迹</title>
    <link ref="alternate" href="https://yinan.me/marking-my-trace.html" />
    <id>marking-my-trace</id>
    <published>2025-02-26 14:02:19+00:00</published>
    <updated>2025-02-26 15:33:07+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;我之前在&lt;a href=&#34;https://mastodon.social/@yinan/113533540585152064&#34;&gt;推特&lt;/a&gt;上分享过，用 RSS+Hoarder/DEVONthink 存档来记录我在互联网上的足迹。这篇文章我来推荐几个记录生活足迹的软件/方法。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://img.1991997.xyz/i/0/2025/02/26/lrpl17-0.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;不知道有没有人跟我有一样的记录习惯，事件记录，时间记录，地点记录。比如说在什么时间去了那些有趣的地方，可能是一个咖啡店，一个饭店，一次远足，甚至是记录日常健身跑步。&lt;/p&gt;
&lt;p&gt;最简单的方案就是用日历，日历事件本身具有时间地点的属性，既可以用作提前安排行程事项，也可以用作记录过去的行程和地点。&lt;/p&gt;
&lt;p&gt;在这个基础上，苹果商店就能找到一些一键记录时间戳/地点然后同步到日历的&lt;a href=&#34;https://apps.apple.com/gb/app/where-when/id1568813475&#34;&gt;软件&lt;/a&gt;，关键词 &lt;a href=&#34;https://apps.apple.com/gb/app/where-when/id6503927025&#34;&gt;where when&lt;/a&gt;。如果你用 Things 3 来做事项管理，Culturedcode 官方就提供了 &lt;a href=&#34;https://culturedcode.com/things/support/articles/2955145/#sdtgg&#34;&gt;Save My Location&lt;/a&gt;的捷径。&lt;/p&gt;
&lt;p&gt;另外还有一个比较有意思的软件，&lt;a href=&#34;https://apps.apple.com/gb/app/what3words-navigation-maps/id657878530&#34;&gt;what3words&lt;/a&gt;，这是一个以三个常见的单词组合来编码地理位置的系统，将地球表面划分为三米见方的网格，每一格对应专属的三个词语。例如，英国首相官邸唐宁街10号正门所在位置对应的三个词语为slurs.this.shark[1]。据说还支持各种不同的语言，有兴趣的朋友可以看一下 &lt;a href=&#34;https://zh.wikipedia.org/zh-cn/%E4%B8%89%E8%AF%8D%E5%9C%B0%E5%9D%80&#34;&gt;wiki&lt;/a&gt;，并下载来试用一下，这个软件需要登录账号才能保存地理位置。&lt;/p&gt;
&lt;h2&gt;世界迷雾&lt;/h2&gt;
&lt;p&gt;世界迷雾大概就是把探索世界当成一个游戏，有等级，成就和迷雾护照的概念，你每探索一个新的地方，你脚下的地图颜色就会被点亮，然后记录一个探索的百分比。很有意思的一款软件，但是没有时间的概念，只有点亮和未点亮的区别。（让我想起了小时候玩 QQ 宠物也有类似小企鹅赛博旅游，点亮全国全世界地图）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://img.1991997.xyz/i/0/2025/02/26/lwljcl-0.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果你使用世界迷雾，这里推荐两个辅助工具，&lt;a href=&#34;https://fogmachine.8bits.io/&#34;&gt;fog machine&lt;/a&gt; 可以用来擦除修改和绘制足迹，也有时光机支持定时给迷雾定期保存快照，连起来播放之后就有点像塞尔达传说的足迹模式。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fog.vicc.wang/eraser.html&#34;&gt;迷雾资料库 - Vicc&lt;/a&gt;，这个我没有怎么用过，据说可以导入国内的铁路轨迹，想要了解更多的可以去微信公众号搜索。&lt;/p&gt;
&lt;p&gt;如果你觉得世界迷雾太贵了，还有平替 &lt;a href=&#34;https://apps.apple.com/gb/app/mapcred/id6444250747&#34;&gt;Mapcred&lt;/a&gt; 和&lt;a href=&#34;https://apps.apple.com/gb/app/footprint-record-lifes-path/id1225520399&#34;&gt;一生足迹&lt;/a&gt;。Mapcred 我试过很费电，一生足迹没怎么用过，不做评价。&lt;/p&gt;
&lt;h2&gt;Rond&lt;/h2&gt;
&lt;p&gt;Rond 跟世界迷雾的理念不一样，他不会记录你的详细轨迹，而更像是我一开始说的那样，如果你在一个地方待了一段时间，它会标记这段时间和地点，在不同的标记时间段期间他还会根据时间、路程的变化，推测出之间的交通方式。&lt;/p&gt;
&lt;p&gt;数据主要以两种形式展示，一是以时间轴的形式将你一天的形成串联起来，你还可以在一块时间段上标记你的心情（联动 Apple Health），你还可以记录笔记，打标签等等。&lt;/p&gt;
&lt;p&gt;二是统计饼图，有日周月年的不同统计区间。有点像 &lt;a href=&#34;https://apps.apple.com/gb/app/life-cycle-track-your-time/id1064955217&#34;&gt;Life Cycle&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://img.1991997.xyz/i/0/2025/02/26/nemfck-0.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;除了显示数据，它还可以像世界迷雾一样在地图上显示你去过的地方，只不过不是连续的轨迹，而是一个一个的图钉📌，一个图钉代表时间轴上的一个时间段。App 内还会统计你去过的所有国家/城市，以及各个城市的图钉数量热力图，它还支持根据不同的活动导出到不同的日历中。总之功能丰富，玩法很多，而且开发者非常 nice，更新勤快，回复反馈及时，非常推荐。&lt;/p&gt;
&lt;h2&gt;关于电量使用&lt;/h2&gt;
&lt;p&gt;两个软件都会要求始终获取 GPS，但是实测下来 fog of world 一天只会用掉 5% 的电量，当然你如果一直待在一个地方也可以把 fog of world 暂时关闭来省电。而 Rond 则更为省电，大概只有 1-2% 的电量消耗。&lt;/p&gt;
&lt;h2&gt;关于隐私数据安全&lt;/h2&gt;
&lt;p&gt;根据 App store 的描述，以上提到的所有软件，除了 what3words 可能是需要注册账号的原因，会有部分数据收集，其他的软件都标注不收集任何信息，所有数据都不会在服务端保存。&lt;/p&gt;
&lt;h2&gt;推荐阅读&lt;/h2&gt;
&lt;p&gt;[1]&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/%E4%B8%89%E8%AF%8D%E5%9C%B0%E5%9D%80&#34;&gt;三词地址 - Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2]&lt;a href=&#34;https://sspai.com/post/85505&#34;&gt;不用世界迷雾，还有这些工具来处理足迹&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3]&lt;a href=&#34;https://sspai.com/post/85355&#34;&gt;App+1 | Rond 与世界迷雾：现实世界的塞尔达传说地图册&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>苹果端 Todo App 简单比较</title>
    <link ref="alternate" href="https://yinan.me/todo-app.html" />
    <id>todo-app</id>
    <published>2024-05-22 00:32:57+01:00</published>
    <updated>2025-02-24 17:36:32+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;继半年多前从 Things 转移到 OmniFocus 之后，今天又在探索苹果端几大 Todo App，主要比较了 Things, OmniFocus 以及 TickTick（唯一跨平台，已经赢了🤭）。&lt;/p&gt;
&lt;h2&gt;Things&lt;/h2&gt;
&lt;p&gt;先说说老朋友 Things，Logbook 显示我从2022年的7月开始用到了2023年的11月15日，等了一年半的 Things 4，始终没有等到。&lt;/p&gt;
&lt;p&gt;不过 Things 3 还是一如既往美观简洁好用，可惜相比较 OmniFocus 缺了以下我觉得很有用的功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Filter/Smart List: Shortcuts 目前半残，如果我不能在组会前，看到在 PhD Area 完成了哪些项目我怎么给老板交差？&lt;/li&gt;
&lt;li&gt;Review Perspective: OmniFocus 可以帮你 keep track review 列表，Things 只能手动 Review。&lt;/li&gt;
&lt;li&gt;Automation: 在 OmniFocus 里可以写脚本把符合某些条件的 Todo 自动归类，或者 Tag。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;OmniFocus&lt;/h2&gt;
&lt;p&gt;我是从 OmniFocus 4 更新（2023年底）之后才开始重度使用的，上面其实已经把我这半年多用 OmniFocus 的感受列的差不多了，唯独有一点我还希望能够加上的，就是 Kanban View。&lt;/p&gt;
&lt;p&gt;我的任务通常会卡在某个节点比如说，计算中，或者等待回复，而不是简简单单的 0-1 两个状态，而 kanban 以及 Things 的 Heading 就很好地处理了这个问题。OmniFocus 虽然有 Nested Task，但是使用下来更像是子/母任务的从属关系，描述任务的状态我更多用的是标签，但是仍不如 Kanban 拖拽来的直观。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;EDIT: 用 Tagging 作为 Kanban 的坏处在于它不是 exclusive 的，把任务从一个标签拖拽到另一个会让它同时打上两个标签，作为 Kanban 显然不理想。好在&lt;a href=&#34;https://discourse.omnigroup.com/t/sub-tag-exclusivity/41773/5&#34;&gt;论坛&lt;/a&gt;里有人提到用 Command + 拖拽就可以实现转移标签。&lt;/p&gt;
&lt;p&gt;另外，如果需要一个 Kanban board based on Tagging，可以看一下&lt;a href=&#34;https://omni-automation.com/omnifocus/plug-in-kanban-board.html&#34;&gt;这个插件&lt;/a&gt;，试用了一下还不错，从脚本上实现 exclusive tagging，把不同 board 的按钮放在工具栏也能实现在不同标签(Board)之间转移任务。比如说我现在的工具栏和 kanban 长这样：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/kanban.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;题外话，Things vs OmniFocus 的比较于我有点像 Anybox 和 DEVONthink 的比较，一个简洁漂亮，功能单一，能完成他该完成的，一个功能强大，有点 buggy，不够美观，上手难度偏高。&lt;/p&gt;
&lt;h2&gt;TickTick&lt;/h2&gt;
&lt;p&gt;一度觉得很理想，有 Kanban，四象限，过滤器，还有经典的日历视图。
除了没有 Area 的概念，Project 多了可能会很乱。&lt;/p&gt;
&lt;p&gt;但是为什么不让我在 iOS 端用国内滴答的账号？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;EDIT: 感谢读者提醒，把 App 语言修改成中文后，登录界面底下可以切换成国内滴答。我再体验几天，后续可能会更新详细体验和比较。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Update on 2025-02-24:&lt;/p&gt;
&lt;p&gt;用了滴答几个月了，我的感觉是一个不错的有潜力的 todo app，虽然操作逻辑上不如 things 顺畅（比如说清单不能多选删除），但是胜在做好了功能和美观易用易上手的平衡点，且价格亲民。缺点是用户生态不如前两个软件，导致 &lt;a href=&#34;https://developer.dida365.com/docs#/openapi&#34;&gt;API&lt;/a&gt; 开发和其他软件的插件支持不多，且我最想要的按照创建时间排序根本没有，只能自己写了个脚本通过 API 手动获取。&lt;/p&gt;
&lt;p&gt;还有一个很大的槽点就是官方备份导出是一份 csv，恢复备份的时候不能像 Things 和 OmniFocus 一样整个覆盖数据库，回到某一个时刻的状态，而是在你原有数据上增量恢复，除非你在恢复前手动清空你的账号（注意清单不能批量删除，只能一条一条右键-删除）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://img.1991997.xyz/i/0/2025/02/24/spmyc2-0.png&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;其他玩家&lt;/h2&gt;
&lt;p&gt;我没有测试 Todoist，因为订阅费用实在太高，但是据说自然语言输入很好用。还有一些后来者：比如 GoodTask (in SetApp) 可以作为 Reminder 的强化版本。我没有考虑长期使用，所以这里不详细介绍了。&lt;/p&gt;
&lt;p&gt;最后，Todo 只是帮助 prioritize 和 focus 的工具，为了 Get Things Done，一张纸也可以做到这样。所以没有最好的 Todo App, 只有最适合你的。&lt;/p&gt;
&lt;p&gt;切忌陷入&lt;a href=&#34;https://utgd.net/article/20657&#34;&gt;效率陷阱&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;切忌花在拖拽, Tag Todo 比实际完成 Todo 花的时间还要多。&lt;/p&gt;
&lt;p&gt;切忌频繁更换工具，能用就不要动。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Friends</title>
    <link ref="alternate" href="https://yinan.me/Friends.html" />
    <id>Friends</id>
    <published>2024-03-26 16:30:50+00:00</published>
    <updated>2025-02-22 15:01:10+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://anotherdayu.com&#34;&gt;大宇/Dayu&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近开始考虑增加友链，先准备从我订阅的 RSS 中发送一些申请。&lt;/p&gt;
&lt;p&gt;如果你有兴趣，也欢迎发&lt;a href=&#34;mailto:yinan.email@gmail.com&#34;&gt;邮件&lt;/a&gt;。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>RSSbrew 公开订阅源</title>
    <link ref="alternate" href="https://yinan.me/rssbrew-public.html" />
    <id>rssbrew-public</id>
    <published>2024-11-28 16:53:50+00:00</published>
    <updated>2024-11-28 16:58:22+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;最近修了几个小 bug，把 images 上传到了 &lt;a href=&#34;https://hub.docker.com/r/yinanc/rssbrew/tags&#34;&gt;docker-hub&lt;/a&gt;，也做了个 &lt;a href=&#34;https://demo.rssbrew.com&#34;&gt;demo 站点&lt;/a&gt;，账号密码 admin, changeme （当然公开使用的，也不要真的去 change）。为了让大家更方便体验 RSSbrew 的功能，我从自己的订阅里面挑选了几个 AI 处理过的订阅源，供大家订阅试用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://public.rssbrew.com/feeds/Paul%20Graham/&#34;&gt;Paul Graham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://public.rssbrew.com/feeds/36kr-AI/&#34;&gt;36 Kr AI 相关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://public.rssbrew.com/feeds/HN%20comments/&#34;&gt;Hacker News 最佳评论周报&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在任意阅读器里直接订阅，大概长这样&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://img.1991997.xyz/i/2024/11/28/r3yiwj-0.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://img.1991997.xyz/i/2024/11/28/re054q-0.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;分别用到了 RSSbrew 的内容过滤，订阅源合并，AI 总结文章，生成周报的功能。欢迎大家到&lt;a href=&#34;https://github.com/yinan-c/rssbrew&#34;&gt;项目主页&lt;/a&gt;点个⭐，也欢迎大家提交 bug/feature request。关于如何配置请参阅我的&lt;a href=&#34;https://yinan.me/rssbrew-config&#34;&gt;另外一篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RSSbrew 可以通过自定义 prompt 做到一些简单的翻译，如果需要更专业的 RSS 翻译功能，推荐大家使用 versun 的&lt;a href=&#34;https://rsstranslator.com&#34;&gt;RSS Translator&lt;/a&gt;，也是用 Django 做的。当然也可以两个一起用！&lt;/p&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;所有公开订阅源均由 RSSbrew 处理后生成，原始内容来源于以下站点的 RSS 订阅源。
- &lt;a href=&#34;https://36kr.com&#34;&gt;36氪&lt;/a&gt;
- &lt;a href=&#34;https://paulgraham.com/&#34;&gt;Paul Graham&lt;/a&gt;
- &lt;a href=&#34;https://hnrss.org&#34;&gt;Hacker News RSS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;公开订阅源仅用于 RSSbrew 功能演示，内容版权归各站点/原作者所有。如有侵权，请联系删除。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>弃用 memos</title>
    <link ref="alternate" href="https://yinan.me/memos.html" />
    <id>memos</id>
    <published>2024-11-28 13:35:14+00:00</published>
    <updated>2024-11-28 13:36:38+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;之前在博客中顶栏有一个 memos 的链接，现在还能&lt;a href=&#34;https://memos.yinan.me&#34;&gt;访问&lt;/a&gt;，解析到我部署的 memos instance。但我最终还是停用了。&lt;/p&gt;
&lt;p&gt;原因如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;经过 v0.22.0，memos API 有个较大的变动，很多开发者（甚至我自己也在写一个 Alfred workflow 都不能再用了），我觉得软硬件即使是大升级，也不应该有 &#34;Break&#34; Changes，当然你也可以选择不升级。&lt;/li&gt;
&lt;li&gt;官方没有提供数据库导出到纯文本的方案基本，我之前基本是靠在 DEVONthink 中订阅 RSS 来实现导出的，而之前 private note 无法通过 RSS 订阅，为此我还在本地也部署了一个内网访问的 memos instance。&lt;/li&gt;
&lt;li&gt;功能增减太过频繁，最新版本似乎连 RSS 也没有了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上类似的想法，写过一条更为啰唆点的 &lt;a href=&#34;https://memos.yinan.me/m/dRyEhke4qYwMBB8az2Nvqu&#34;&gt;memos&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;虽然作为开源项目，memos 不可谓是不成功的，况且用户也不能像要求商业项目那样去让开源项目维护者。但因为这是一个笔记应用，而笔记最重要的是通用性和稳定性（也就是能在任何一台电脑，任何一个应用内都能看到）。&lt;/p&gt;
&lt;p&gt;关于这个，Obisidian 的 CEO 写过 &lt;a href=&#34;https://stephango.com/file-over-app&#34;&gt;File Over App&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;考虑到这些我还是乖乖用回&lt;a href=&#34;https://meganesulli.com/blog/sync-obsidian-vault-iphone-ipad/&#34;&gt;纯文本 + Git&lt;/a&gt; 的方案，用 Obsidian 编辑。最近也在试用一个叫作 &lt;a href=&#34;https://github.com/blinko-space/blinko&#34;&gt;blinko&lt;/a&gt; 的应用，和 memos 很像，但是主打 AI 搜索+对话。&lt;/p&gt;
&lt;p&gt;离开笔记应用不是没有成本的，转移就是一个，memos 仅有数据库保存方式，转移起来还挺麻烦 (again, file over app!)。我现在用以下方式，
1. Obsidian 有一个 memos sync 的插件，可以直接导入每日笔记。
2. Blinko 可以从 memos 数据库文件导入。
3. 直接读取数据库文件，想办法导出纯文本。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>滴答清单体验</title>
    <link ref="alternate" href="https://yinan.me/ticktick.html" />
    <id>ticktick</id>
    <published>2024-11-27 03:36:13+00:00</published>
    <updated>2024-11-28 13:35:14+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;半年之前写过一篇&lt;a href=&#34;https://yinan.me/todo-app.html&#34;&gt;苹果端 Todo App 简单比较&lt;/a&gt;，主要是分析了 Things 和 OmniFocus 的优缺点，当时没有深度体验滴答清单（海外版称 TickTick），所以今天补上。&lt;/p&gt;
&lt;p&gt;我是从 2022 年开始使用 Things3，2023年底换了 OmniFocus 4，一年后的今天我选择试一下滴答清单，所以这篇文章大多是关于 OmniFocus 和滴答清单的比较，会少量提到一下和 Things 的比较。&lt;/p&gt;
&lt;p&gt;（P.S.: 现在 Things3 正在黑五7折优惠）&lt;/p&gt;
&lt;h2&gt;1 为什么要换&lt;/h2&gt;
&lt;p&gt;更换工具折腾是很大的时间精力和金钱成本，尤其是 TODO 和笔记，更何况我之前还写了把 Things/OmniFocus 的任务导出的脚本，换一个工具意味着重新来过。&lt;/p&gt;
&lt;p&gt;但这一年 OmniFocus 确实也有让我体验不佳的点：
- 数据量大了会很卡，之前清理过一次了，我目前大概 2000 多个条目（包括已完成）不管是手机还是电脑端都不够流畅。
- 不够美观。见仁见智，我更喜欢 Things 的界面。
- OmniFocus 不像 Things 或者滴答清单那么，任务/项目完成了之后就完全从列表内隔离开，而是继续保持原有的结构在穿插在其他未完成的任务/项目中，导致界面很杂乱，虽然也可以通过改变视图为显示剩余，但这样又失去了结构，总之项目结构和整洁度二者只能去其一。
&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/Omnifocus-random.png&#34; /&gt;
- 最主要的是产品的使用逻辑和我不对付，Things/滴答都有一个今日视图，给任务安排一个时间，他就会出现在那天的今日视图中，当然也可以通过 perspective 建立一个筛选过的今日视图（比如说筛选出&lt;code&gt;正在进行&lt;/code&gt;标签或者有 defer/deadline date 是今日以及以前的任务。但我发现我就会滥用截止日期，过期的多了最后会导致对截止日期过期不敏感了，再加上杂乱的界面，会感觉失去重点和优先级，反而完成不了要紧事。&lt;/p&gt;
&lt;p&gt;当然 OmniFocus 也有很多特别出彩的地方，比如说自定义 perspective（里面的条件很丰富），review 功能，插件自动化，Focus View（配合新窗口）等。具体可以见我之前的&lt;a href=&#34;https://yinan.me/todo-app.html&#34;&gt;文章&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;2 滴答 vs OmniFocus&lt;/h2&gt;
&lt;p&gt;以下是我在会员免费期体验到的，有些功能可能免费版没有，另外限于时间，体验内容肯定不够完全。&lt;/p&gt;
&lt;h3&gt;优点：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;外观：美观介于 OmniFocus 和 Things 之间。这两者的笔记一栏是长方形选中框的的下延展，随着笔记内容变多而变大，things 是纯文本格式， OmniFocus 是富文本，但是似乎只能通过粘贴保留格式，输入是纯文本格式，而且 OmniFocus 还挺卡的。滴答清单每一条任务展开之后占据右侧1/3窗口，完全可以当作一页纸来写（所以官方提供了转化为笔记的功能吧），还可以对内容进行加粗高亮，富文本。&lt;/li&gt;
&lt;li&gt;操作和 Things 差不多顺滑，就是鼠标拖动支持的有点别扭（默认鼠标是选中文本，得选中左边的三条杠小图标才能拖动），目前来看键盘快捷键支持不如 Things 和 OmniFocus。&lt;/li&gt;
&lt;li&gt;归档和完成的任务与开放项目隔离，眼不见为净。OmniFocus 所有都显示的话会很乱，见上图。但是我又需要看到能看到项目的结构，滴答正好通过最右边栏任务的详细页面做到了两个的平衡，也就是中间栏隔离，右侧栏保留结构（Things 的 Logbook 完全就没有原来的项目结构了，或者说 Things 本身除了 Heading 和任务内的检查事项就没有父子结构的概念，除非 Heading 整个被标记完成，才能在 Logbook 内还原 Heading 结构。&lt;/li&gt;
&lt;li&gt;粘贴的链接可以自动识别并填充标题。&lt;/li&gt;
&lt;li&gt;原生看板，OmniFocus 需要用插件配合标签，Things 只有一个只读的&lt;a href=&#34;https://apps.apple.com/gb/app/kanbanview/id1507458952&#34;&gt;第三方软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;完备的日历页面和任务+时间线的安排功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/ticktick.png&#34; /&gt;
&lt;img alt=&#34;&#34; src=&#34;https://yinan.me/pics/things-heading.png&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;缺点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;虽然可以筛选，但是不能专注到某一个 project/area。&lt;/li&gt;
&lt;li&gt;筛选可选项不如 OmniFocus 多，比如说没有办法实现根据创建时间/修改时间的筛选排序，这样很容易创建了就忘了，就连 Things 都能通过&lt;a href=&#34;https://www.icloud.com/shortcuts/967cbbc1c61546e4a869da6b35b59060&#34;&gt;捷径实现&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;数据存储备份：OmniFocus 和 Things 似乎都是本地数据库+本地多副本备份+云端同步的方式，OmniFocus 支持手动打开 .ofocus-backup 回溯到某一个版本，然后支持本地覆盖云端/云端覆盖本地。滴答清单的数据好像都在云端存储，本地甚至不会显示出项目内所有已完成的任务（所以会在你搜不到东西的时候，有在云端中搜索的选项）&lt;/li&gt;
&lt;li&gt;数据导出：滴答只支持任务导出到 csv，官方 API 只能导出未完成任务。OmniFocus 支持随意筛选项目后，导出 csv 和 .ofocus 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;其他有好有坏，见仁见智&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用逻辑：&lt;/li&gt;
&lt;li&gt;OmniFocus 不同项目有区分，所以你可以很明显的看到项目的下一个任务（Next Available）是什么。&lt;/li&gt;
&lt;li&gt;滴答只有一个安排日期，OmniFocus 和 Things 都有两个日期，一个安排日期，一个截止日期。&lt;/li&gt;
&lt;li&gt;在 OmniFocus 中清单和任务没有太大的界限，可以互相拖动转换，Things 中任务可以被拖到 Area（也就是文件夹）下一层和项目平行，但是不能互相转换，Heading 可以转为项目，滴答清单自由度最低，任务，清单，文件夹，三种层级严格，任务 &amp;lt; 清单 &amp;lt; 文件夹，不能互相转换，除了任务可以有最多五层和其他任务的嵌套。但是拖动操作很不方便。&lt;/li&gt;
&lt;li&gt;不会显示最近修改的任务列表，但是对于每一个任务有任务动态，还有垃圾箱，防止误删除。&lt;/li&gt;
&lt;li&gt;mac 软件的第三方支持：&lt;/li&gt;
&lt;li&gt;Raycast: OmniFocus 没有，滴答很好用；Alfred: OmniFous &amp;gt; 滴答。&lt;/li&gt;
&lt;li&gt;Popclip for &lt;a href=&#34;https://www.popclip.app/extensions/x/htd93q&#34;&gt;TickTick/滴答&lt;/a&gt;, &lt;a href=&#34;https://www.popclip.app/extensions/x/2xsjgt&#34;&gt;Things&lt;/a&gt; and &lt;a href=&#34;https://www.popclip.app/extensions/x/69vkqz&#34;&gt;OmniFocus&lt;/a&gt; 都有。&lt;/li&gt;
&lt;li&gt;Chrome 插件，TickTick 会更加强大一点, OmniFocus 只有一个第三方的添加。&lt;/li&gt;
&lt;li&gt;全局添加：OmniFocus 有 Services - Add to OmniFocus 和 Share menu 两项。滴答和 Things 都是快捷键唤出一个类似于 spotlight 的窗口添加，things 和 OmniFocus 会有对当前窗口的 context 自动填充。&lt;/li&gt;
&lt;li&gt;API 与自动化: &lt;ul&gt;
&lt;li&gt;Things 有 &lt;a href=&#34;https://culturedcode.com/things/support/articles/2803573/&#34;&gt;URL scheme&lt;/a&gt;, &lt;a href=&#34;https://culturedcode.com/things/support/articles/2803572/&#34;&gt;Applescript&lt;/a&gt;, &lt;a href=&#34;https://github.com/thingsapi/things.py&#34;&gt;第三方 python api&lt;/a&gt;还有官方提供的&lt;a href=&#34;https://culturedcode.com/things/support/articles/2955145/&#34;&gt;捷径库&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;OmniFocus 有 Applescript 和 Javascript 来实现插件。而且可以通过直接读取 sqlite 数据库自动批量的导出数据，之前根据此写过一个&lt;a href=&#34;https://github.com/yinan-c/Omnifocus-export-markdown&#34;&gt;导出到 markdown 的脚本&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;滴答和 TickTick 有 &lt;a href=&#34;https://developer.dida365.com/docs#/openapi&#34;&gt;OpenAPI&lt;/a&gt; 非官方 &lt;a href=&#34;https://github.com/lazeroffmichael/ticktick-py&#34;&gt;ticktick-py&lt;/a&gt; (可能需要自行修改所有域名到 dida365.com) 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3 滴答的其他功能&lt;/h2&gt;
&lt;p&gt;除了基本的 tasks，滴答还提供番茄钟和习惯打卡，不过目前我没有找到合适的导出这两部分数据的方案，所以没有深度试。&lt;/p&gt;
&lt;h2&gt;4 迁移工作&lt;/h2&gt;
&lt;p&gt;Things 到滴答的迁移好像挺顺滑的（没有深度试），如果是反过来目前 Things 官方没有支持，只能自己从 API 或者导出的 csv 里面想办法。&lt;/p&gt;
&lt;p&gt;OmniFocus 到滴答导入过程需要在 OmniFocus 选中任务再导出 csv，而且导入之后会丢失创建和放弃任务的时间点(后者应该是 OmniFocus 的锅，因为同样的问题在你归档旧的已放弃任务的时候也会出现，会重新变成未完成状态并且丢失放弃时间戳)。&lt;/p&gt;
&lt;p&gt;我之前写过&lt;a href=&#34;https://github.com/yinan-c/Omnifocus-export-markdown&#34;&gt;OmniFocus&lt;/a&gt; 以及 &lt;a href=&#34;https://github.com/yinan-c/things2md&#34;&gt;Things&lt;/a&gt; 导出 markdown 的脚本，也可以用已完成项目按时间规律生成回顾/周报的功能，也可以把所有的任务分项目导出 markdown。配合 git 还可以追踪项目的变化情况。&lt;/p&gt;
&lt;p&gt;迁移之后，花了点时间用各种 API 实现了导出所有未完成/部分完成任务，增量缓存 json，保存 markdown，再输出为 RSS。
其实折腾这么多就是为了能够把数据主动权在自己手里，如果平台/工具倒闭了（希望不要）至少自己还有数据能有退路再保留一份纯文本供自己阅读。&lt;/p&gt;
&lt;h2&gt;5 最后的话&lt;/h2&gt;
&lt;p&gt;关于 GTD（Get Things Done），完成事情是最终目的，折腾上花费的时间不如直接去完成你列表上的项目。这里引用一句话，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most important lever a leader has to create focus is to simplify the priority list. by &lt;a href=&#34;https://alearningaday.blog/2024/11/21/creating-focus/&#34;&gt;Rohan&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于工具，适合自己才是最好的。所以尽量秉承那句话 If it ain&#39;t broken, don&#39;t fix it.&lt;/p&gt;
&lt;h2&gt;6 相关&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7376484708547870731&#34;&gt;滴答清单/TickTick 官方API尝试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
    <title>Hoarder - 自托管 AI 书签管理软件</title>
    <link ref="alternate" href="https://yinan.me/hoarder-zh.html" />
    <id>hoarder-zh</id>
    <published>2024-11-07 14:48:52+00:00</published>
    <updated>2024-11-07 14:57:21+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;对于书签管理，我目前的工作流是这样的：自建 &lt;a href=&#34;https://wallabag.org/&#34;&gt;wallabag&lt;/a&gt; 保存稍后读，&lt;a href=&#34;https://anybox.app/&#34;&gt;Anybox&lt;/a&gt; 管理书签并通过 Alfred 快速调用，然后用 &lt;a href=&#34;https://www.devontechnologies.com/apps/devonthink&#34;&gt;DEVONthink&lt;/a&gt; 本地归档 wallabag 的稍候读和 Anybox 的书签，方便全文搜索。为了实现自动化，我还写了&lt;a href=&#34;https://github.com/yinan-c/Anybox-sync-Devonthink/blob/main/anybox_to_devonthink.py&#34;&gt;一个脚本&lt;/a&gt;，可以自动把 Anybox 的新链接同步到 DEVONthink（这个脚本是在 &lt;a href=&#34;https://alfred.app/workflows/anybox/anybox/&#34;&gt;Anybox alfredworkflow&lt;/a&gt; 基础上改进的）。&lt;/p&gt;
&lt;p&gt;这套流程一直运行得挺顺畅，但我还是有两点不太满意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Anybox 缺少全文搜索功能。截至2024年11月，这个呼声很高的功能还停留在&lt;a href=&#34;https://anybox.canny.io/feature-requests/p/full-text-search&#34;&gt;Under Review&lt;/a&gt;阶段。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;书签整理不够智能。虽然 Anybox 的收件箱理念不错，从收件箱再整理到文件夹、标签，还能依赖 Smart Folder 功能帮忙分类管理，但每周要把他们手动打标签或者移入文件夹还是太麻烦了。在保存了海量书签后，我还是更习惯用搜索（可惜又没有全文搜索）。所以目前我还是倾向于在 Anybox 和 Wallabag 不整理，只有收件和存档两个状态，存档之后依赖 DEVONthink 的全文搜索 + Smart Rules 再自动分类整理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近发现了一个新项目 &lt;a href=&#34;https://github.com/hoarder-app/hoarder&#34;&gt;Hoarder&lt;/a&gt;，主打 AI 自动打标签，准备体验一下，看看能不能取代或者补充 Anybox。（作为一个爱好 self hosted 和囤积资料的人，Hoarder 这个名字就很对我胃口 🤭）&lt;/p&gt;
&lt;p&gt;第一印象相当不错，感觉是个成熟的产品：有 iOS 应用支持分享菜单，有 Chrome 扩展方便保存，还能存笔记和图片。AI 自动标签功能，可自定义 prompt，能帮我省去手动整理的麻烦。&lt;/p&gt;
&lt;p&gt;不过要完全替代 Anybox，还需要补齐以下几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoarder-app/hoarder/issues/43&#34;&gt;REST API&lt;/a&gt; - 用于数据自动化导入/导出和开发 Alfred 插件&lt;blockquote&gt;
&lt;p&gt;目前只提供命令行工具， REST API 会在&lt;a href=&#34;https://docs.hoarder.app/api/&#34;&gt;0.18.0 下一个版本支持&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoarder-app/hoarder/issues/75&#34;&gt;便捷的数据导出和备份&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;截图、本地缓存、链接等数据的导出功能还不完善。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;离线归档&lt;blockquote&gt;
&lt;p&gt;现在只支持纯文本缓存和截图。据说后续会支持更多格式（截止2024年5月，已在规划中）。
  更新：到2024年11月，已经支持用 &lt;a href=&#34;https://github.com/Y2Z/monolith&#34;&gt;monolith&lt;/a&gt; 实现完整网页存档，解决了链接失效的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoarder-app/hoarder/issues/172&#34;&gt;本地网页抓取&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;Anybox 和 &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile&#34;&gt;SingleFile 扩展&lt;/a&gt; 的配合就很完美，可以把登录后的或者付费墙后的内容直接通过 API 保存下来。
（另外，这样还解决了 SingleFile 元数据只保存域名前缀的问题 - 直接用 SingleFile 下载到 DEVONthink 时只能看到类似 https://github.com 这样不完整的地址）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些锦上添花的功能建议：
- RSS 订阅功能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding&#34;&gt;linkding&lt;/a&gt; 和 &lt;a href=&#34;https://wallabag.org/&#34;&gt;wallabag&lt;/a&gt; 都有这个功能。我现在就使用 RSS 把 wallabag 的内容同步到 DEVONthink，和用 &lt;a href=&#34;https://github.com/cdhigh/kindleear&#34;&gt;kindleear&lt;/a&gt; 订阅 wallabag RSS 每天晚上推送稍候读到 Kindle。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hoarder 虽然暂时还不能完全替代我现有的工具链，但作为一个活跃开发的开源项目，发展势头很好，值得持续关注。&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Hoarder - The Self-Hosted Bookmark Manager</title>
    <link ref="alternate" href="https://yinan.me/hoarder.html" />
    <id>hoarder</id>
    <published>2024-05-24 18:56:37+01:00</published>
    <updated>2024-11-07 14:57:21+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;Currently, I am using &lt;a href=&#34;https://wallabag.org/&#34;&gt;wallabag&lt;/a&gt; for read-it-later, &lt;a href=&#34;https://anybox.app/&#34;&gt;Anybox&lt;/a&gt; for bookmarking and quick retrival via Alfred, and &lt;a href=&#34;https://www.devontechnologies.com/apps/devonthink&#34;&gt;DEVONthink&lt;/a&gt; for archiving the booksmarks from wallabag and Anybox to better support full text searching (I wrote &lt;a href=&#34;https://github.com/yinan-c/Anybox-sync-Devonthink/blob/main/anybox_to_devonthink.py&#34;&gt;a script&lt;/a&gt; that checks the Anybox API for new links and save them to DEVONthink, which is modified from the &lt;a href=&#34;https://alfred.app/workflows/anybox/anybox/&#34;&gt;Anybox alfredworkflow&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This workflow has been robust and reliable for me, but I am always looking for better selfhosted tools to improve my workflow. There are two things currently missing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Full text search is something Anybox doesn&#39;t have yet. While I write this article, May 2024, it is still under review in the &lt;a href=&#34;https://anybox.canny.io/feature-requests/p/full-text-search&#34;&gt;canny page of Anybox&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Organizing bookmarks. I have a lot of bookmarks. I appreciate the Inbox ideology of Anybox, and the implementation of folders+tags+smart folders, but I still rely a lot on searching instead of mannually organizing (and again anybox is not providing full text search yet). It might help if there is an automatic organization feature like AI tagging or Smart Rules in DEVONthink.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, trying out &lt;a href=&#34;https://github.com/hoarder-app/hoarder&#34;&gt;Hoarder&lt;/a&gt; app today. I would like to see whether it would compete Anybox as my main bookmark manager. Also I do like self-hosting services, and hoarding stuff 🤭.&lt;/p&gt;
&lt;p&gt;At first sight, it feels like a complete app that I can directly put in production, it has a iOS app with share sheet support, chrome extension for easily save from browser, it saves note and images. And I really like the ability to have AI tagging for links and images so that I don&#39;t have to manually organize them. &lt;/p&gt;
&lt;p&gt;However, there are some features missing before it can become my main bookmark manager. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoarder-app/hoarder/issues/43&#34;&gt;REST API&lt;/a&gt; - for easily exporting data like links, tags, and for an Alfred workflow.&lt;blockquote&gt;
&lt;p&gt;For now, it provides a CLI tool, but I am installing the app on my homeserver instead of my laptop. I will have to ssh to use the CLI, not ideal. A REST API would be good for remotely managing data.
As of Nov 2024, it will be supported in the next version &lt;a href=&#34;https://docs.hoarder.app/api/&#34;&gt;0.18.0&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoarder-app/hoarder/issues/75&#34;&gt;Easy data export and backup&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;I don&#39;t seem to find a very good way to export data easily, for example screenshots, local cache, links.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Offline archiving&lt;blockquote&gt;
&lt;p&gt;For now, Hoarder supports plain text caching and screenshots. It would be good to see other formats supported (Planned, as of May 2024)
  update: As of Nov 2024, it supports full page archival (using &lt;a href=&#34;https://github.com/Y2Z/monolith&#34;&gt;monolith&lt;/a&gt;) to protect against link rot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoarder-app/hoarder/issues/172&#34;&gt;Local scrapper&lt;/a&gt; to fetch content after user login for some sites.&lt;blockquote&gt;
&lt;p&gt;What I like about Anybox is its integration with &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile&#34;&gt;SingleFile extension&lt;/a&gt;. It can directly save the .html downloaded to Anybox via API, so that any content behind paywall will also be downloaded. 
(It actually addresses the pity that SingleFile metadata only contains the first part of the full domain - it will only show something like https://github.com, when you directly download a  html with SingleFile metadata to DEVONthink)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other features could be useful:
- RSS subscription link&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Like what &lt;a href=&#34;https://github.com/sissbruecker/linkding&#34;&gt;linkding&lt;/a&gt; and &lt;a href=&#34;https://wallabag.org/&#34;&gt;wallabag&lt;/a&gt; provides. I am currently relying on RSS to sync my read-it-later from wallabag to DEVONthink and to my kindle with &lt;a href=&#34;https://github.com/cdhigh/kindleear&#34;&gt;kindleear&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To conclude, I will not replace Anybox/wallabag with Hoarder for now. But it is a very young and promising open-source app with rapid iteration, someday it might will.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>整了个 NAS</title>
    <link ref="alternate" href="https://yinan.me/nas.html" />
    <id>nas</id>
    <published>2024-10-15 23:53:20+01:00</published>
    <updated>2024-11-07 14:08:37+00:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;最近整了个 &lt;a href=&#34;https://x.com/yinan_ch/status/1840031881254797353&#34;&gt;DS423+&lt;/a&gt; 来代替之前的老旧 MacBook Pro + 一块外接硬盘的 NAS/homeserver 方案。&lt;/p&gt;
&lt;p&gt;我买了四块盘。 1、2 8TB 希捷盘做了 RAID1 冗余，其余两块略大的盘 Basic（希捷12TB 和 16 TB），另有两块 NVMe SSD 作为存储池跑 Docker，放高速存储。几天用下来，发现 NAS 有几个好处，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;数据从冷数据变成了 24 小时在线的热数据，可以随时访问编辑，而不用插硬盘挂个线。而且，终于把散落在各个硬盘的数据整合在了一起，之前一份数据为了访问方便可能存到了好几块外接硬盘上，而 NAS 提供了个中心化的存储方案。另外据我所知，Btrfs 格式支持 deduplication， 重复数据只存一份，不会浪费空间。&lt;/li&gt;
&lt;li&gt;Raid1 冗余允许一块硬盘坏了重建，和 DSM 的较为完备的预警系统以及文件完整性检查。之前在移动硬盘上数据坏了都不知道，只能从备份恢复（如果有备份的话）。&lt;/li&gt;
&lt;li&gt;Btrfs 文件系统支持快照，可以随时回滚到之前的状态（群晖有官方套件 Snaptshots Replication，非常推荐，就像 macOS 的时间机器一样）。&lt;/li&gt;
&lt;li&gt;无线的时间机器备份真的很爽。第一次有点慢可以考虑接网线备份，之后增量备份的时候就不用管了。&lt;/li&gt;
&lt;li&gt;折腾的乐趣&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;不得不说， DSM 虽然最近&lt;a href=&#34;https://www.reddit.com/r/synology/comments/1feqy62/synology_722_proves_that_this_company_doesnt_care/&#34;&gt;走了倒车&lt;/a&gt;，但仍是一个很新手友好和功能和生态完善的 NAS 系统（其他 unraid truenas 没有用过不做评价）。用下来我的感觉是，DSM 的很多功能是在教用户应该怎么维护数据健康/维持高可用性，怎么做备份和快照。另外还有什么影音库，照片库，跑下载，甚至 DNS，软路由等都是 NAS 很好用的功能，不过目前对我来说收益不是特别大。&lt;/p&gt;
&lt;p&gt;当然缺点也有:&lt;/p&gt;
&lt;p&gt;一是读写速度显然没有插个固态快（受制于网络和机械硬盘），不过花几十块钱买个交换机用 smb 双通道 (multichannel) 也算上了 250 MB/s, 比外接一块机械硬盘快了。 &lt;/p&gt;
&lt;p&gt;二是 8TB 以上7200转的硬盘读写时炒豆子声音还是很大，解决方法是换5400转的硬盘或者上 SATA SSD 解决。如果跑 Docker 和虚拟机，也可以考虑装个 NVME SSD 把套件数据和 Docker 转移到 SSD 存储池上。加内存条减少 swap 或许也有帮助。&lt;/p&gt;
&lt;p&gt;三是 DS423+ 的 DSM 系统虽然好用，但是奈何硬件太弱了，Intel Celeron J3455, PCIe 2.0 x 1 (NVME 只能跑 500 MB/s)，1Gbps 网口，这些要升级就得加钱，然而一台白裙的价格对于其硬件来说已经很贵了。&lt;/p&gt;
&lt;p&gt;关于 SSD 的配置和其他资料，推荐一个链接和两个 Github 项目。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chiphell.com/thread-2187138-1-1.html&#34;&gt;专门开一贴，群晖硬软件的的各种坑及解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/007revad/Synology_M2_volume&#34;&gt;https://github.com/007revad/Synology_M2_volume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/007revad/Synology_HDD_db&#34;&gt;https://github.com/007revad/Synology_HDD_db&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外再提一嘴数据安全，虽然 Raid 有冗余，但是冗余不是备份！遵循 &lt;a href=&#34;https://en.wikipedia.org/wiki/Backup&#34;&gt;3-2-1 原则&lt;/a&gt;定期备份数据到云端是很有必要的，防止硬盘损坏，天灾人祸等意外情况。后面会写一篇文章分享一下我的备份方案。&lt;/p&gt;
&lt;p&gt;最后给我的 NAS 上个照片。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;DS423+&#34; src=&#34;https://yinan.me/pics/nas.jpeg&#34; /&gt;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Follow 认证</title>
    <link ref="alternate" href="https://yinan.me/follow.html" />
    <id>follow</id>
    <published>2024-10-05 16:50:51+01:00</published>
    <updated>2024-10-05 16:54:36+01:00</updated>
    <author><name>Yinan</name></author>
    <content type="html">&lt;p&gt;This message is used to verify that this feed (feedId:41446022334078981) belongs to me (userId:63216204740061184). Join me in enjoying the next generation information browser https://follow.is.&lt;/p&gt;</content>
  </entry>
  

</feed>